<UserControl x:Class="oop_project.Views.BTGraphView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:converters="clr-namespace:oop_project.Converters"
             xmlns:models="clr-namespace:oop_project.Models"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             Background="DarkGray">

    <UserControl.Resources>
        <!--Hotkey Commands-->
        <RoutedUICommand x:Key="UICommand-Add"/>
        <RoutedUICommand x:Key="UICommand-Delete"/>
        <RoutedUICommand x:Key="UICommand-DeleteAll"/>
        <RoutedUICommand x:Key="UICommand-ResetView"/>


        <sys:Double x:Key="FontSize">14</sys:Double>

        <converters:PointToMarginConverter x:Key="PointToMarginConverter"/>
        <converters:BTPositionToPointConverter x:Key="BTPositionToPointConverter"/>

        <DataTemplate DataType="{x:Type models:BTVertex}">
            <Grid Name="grid" Width="{StaticResource ResourceKey=CellDimension}" Height="{StaticResource ResourceKey=CellDimension}">
                <Grid.Margin>
                    <MultiBinding Converter="{StaticResource PointToMarginConverter}">
                        <Binding Path="Position" Converter="{StaticResource BTPositionToPointConverter}"/>
                        <Binding ElementName="grid" Path="ActualWidth"/>
                        <Binding ElementName="grid" Path="ActualHeight"/>
                    </MultiBinding>
                </Grid.Margin>

                <Ellipse Stroke="Black" StrokeThickness="4" Fill="White"
                         HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Panel.ZIndex="0"/>
                <TextBlock Text="{Binding Path=Value}" FontWeight="Bold" FontSize="16"
                           HorizontalAlignment="Center" VerticalAlignment="Center" Panel.ZIndex="1"/>
                <!--Hitbox for selection-->
                <Ellipse x:Name="hitbox"
                         Fill="DeepSkyBlue" Opacity="0"
                         HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Panel.ZIndex="2"/>
            </Grid>

            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding Path=Selected}" Value="True">
                    <Setter TargetName="hitbox" Property="Opacity" Value="0.2"/>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>

        <DataTemplate DataType="{x:Type models:BTEdge}">
            <Path Stroke="Black" StrokeThickness="4">
                <Path.Data>
                    <LineGeometry StartPoint="{Binding Path=Start, Converter={StaticResource BTPositionToPointConverter}}"
                                  EndPoint="{Binding Path=End, Converter={StaticResource BTPositionToPointConverter}}"/>
                </Path.Data>
            </Path>
        </DataTemplate>
        
        <!--The following code is an edited Button template-->
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="roundedButton" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="FontSize" Value="{StaticResource FontSize}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true" CornerRadius="5" Width="75" Height="35" Cursor="Hand">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>

    <UserControl.CommandBindings>
        <CommandBinding Command="{StaticResource UICommand-Add}" Executed="Add_Click"/>
        <CommandBinding Command="{StaticResource UICommand-Delete}" Executed="Delete_Click"/>
        <CommandBinding Command="{StaticResource UICommand-DeleteAll}" Executed="DeleteAll_Click"/>
        <CommandBinding Command="{StaticResource UICommand-ResetView}" Executed="ResetView_Click"/>
    </UserControl.CommandBindings>
    
    <UserControl.InputBindings>
        <KeyBinding Command="{StaticResource UICommand-Add}" Key="Return"/>
        <KeyBinding Command="{StaticResource UICommand-Delete}" Key="D"/>
        <KeyBinding Command="{StaticResource UICommand-DeleteAll}" Key="D" Modifiers="Ctrl"/>
        <KeyBinding Command="{StaticResource UICommand-ResetView}" Key="R" Modifiers="Ctrl"/>
    </UserControl.InputBindings>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="20"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Menu Background="White">
            <MenuItem Header="_Import/Export">
                <MenuItem Header="_Import from JSON..." Command="{Binding ImportFromJsonCommand}"/>
                <MenuItem Header="_Export">
                    <MenuItem Header="To JSON..." Command="{Binding ExportToJsonCommand}"/>
                    <MenuItem Header="To TXT..." Command="{Binding ExportToTxtCommand}"/>
                </MenuItem>
            </MenuItem>
        </Menu>

        <Grid Margin="5" Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="50"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <StackPanel Grid.Row="0" Orientation="Horizontal" Margin="5">
                <Border VerticalAlignment="Stretch" Margin="3,0,0,0">
                    <TextBox x:Name="NodeValue" FontSize="20" MaxLength="4" TextAlignment="Center"
                             Width="60" Cursor="IBeam" VerticalAlignment="Center"
                             TextChanged="NodeValue_TextChanged" SelectionChanged="NodeValue_SelectionChanged"/>
                </Border>

                <Button x:Name="Add" Content="Add" Command="{StaticResource UICommand-Add}"
                        IsEnabled="False" Margin="3,0,5,0" Style="{DynamicResource roundedButton}"/>

                <Rectangle Stroke="Gray" Width="1" VerticalAlignment="Stretch"/>

                <Button x:Name="Delete" Content="Delete" Command="{StaticResource UICommand-Delete}"
                        IsEnabled="False" Margin="5,0,0,0" Style="{DynamicResource roundedButton}"/>
                <Button x:Name="DeleteAll" Content="Delete all" Command="{StaticResource UICommand-DeleteAll}"
                        IsEnabled="False" Margin="3,0,5,0" Style="{DynamicResource roundedButton}"/>

                <Rectangle Stroke="Gray" Width="1" VerticalAlignment="Stretch"/>

                <Button x:Name="ResetView" Content="Reset view" Command="{StaticResource UICommand-ResetView}"
                        Margin="5,0,0,0" Style="{DynamicResource roundedButton}"/>
            </StackPanel>

            <Border x:Name="graphBorder" Grid.Row="1"
                    Background="White" BorderThickness="3" BorderBrush="Black" CornerRadius="5"
                    MouseMove="graphBorder_MouseMove" MouseWheel="graphBorder_MouseWheel"
                    MouseLeftButtonDown="graphBorder_MouseLeftButtonDown" MouseLeftButtonUp="graphBorder_MouseLeftButtonUp">
                <!--This Grid is for nice clipping-->
                <Grid ClipToBounds="True">
                    <ItemsControl x:Name="graphVertices" Panel.ZIndex="1" ItemsSource="{Binding Path=BTVertices, UpdateSourceTrigger=PropertyChanged}">
                        <ItemsControl.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </ItemsControl.RenderTransform>

                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <Canvas/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                    </ItemsControl>

                    <ItemsControl x:Name="graphEdges" Panel.ZIndex="0" ItemsSource="{Binding Path=BTEdges, UpdateSourceTrigger=PropertyChanged}">
                        <ItemsControl.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </ItemsControl.RenderTransform>

                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <Canvas/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                    </ItemsControl>
                </Grid>
            </Border>
        </Grid>
    </Grid>
</UserControl>
